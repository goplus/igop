// export by github.com/goplus/ixgo/cmd/qexp

//go:build go1.24
// +build go1.24

package syscall

import (
	q "syscall"

	"go/constant"
	"reflect"

	"github.com/goplus/ixgo"
)

func init() {
	ixgo.RegisterPackage(&ixgo.Package{
		Name: "syscall",
		Path: "syscall",
		Deps: map[string]string{
			"errors":               "errors",
			"internal/bytealg":     "bytealg",
			"internal/byteorder":   "byteorder",
			"internal/goarch":      "goarch",
			"internal/itoa":        "itoa",
			"internal/oserror":     "oserror",
			"internal/stringslite": "stringslite",
			"runtime":              "runtime",
			"structs":              "structs",
			"sync":                 "sync",
			"unsafe":               "unsafe",
		},
		Interfaces: map[string]reflect.Type{
			"Conn":     reflect.TypeOf((*q.Conn)(nil)).Elem(),
			"RawConn":  reflect.TypeOf((*q.RawConn)(nil)).Elem(),
			"Sockaddr": reflect.TypeOf((*q.Sockaddr)(nil)).Elem(),
		},
		NamedTypes: map[string]reflect.Type{
			"Dirent":        reflect.TypeOf((*q.Dirent)(nil)).Elem(),
			"Errno":         reflect.TypeOf((*q.Errno)(nil)).Elem(),
			"ProcAttr":      reflect.TypeOf((*q.ProcAttr)(nil)).Elem(),
			"Rlimit":        reflect.TypeOf((*q.Rlimit)(nil)).Elem(),
			"Rusage":        reflect.TypeOf((*q.Rusage)(nil)).Elem(),
			"Signal":        reflect.TypeOf((*q.Signal)(nil)).Elem(),
			"SockaddrInet4": reflect.TypeOf((*q.SockaddrInet4)(nil)).Elem(),
			"SockaddrInet6": reflect.TypeOf((*q.SockaddrInet6)(nil)).Elem(),
			"SockaddrUnix":  reflect.TypeOf((*q.SockaddrUnix)(nil)).Elem(),
			"Stat_t":        reflect.TypeOf((*q.Stat_t)(nil)).Elem(),
			"SysProcAttr":   reflect.TypeOf((*q.SysProcAttr)(nil)).Elem(),
			"Timespec":      reflect.TypeOf((*q.Timespec)(nil)).Elem(),
			"Timeval":       reflect.TypeOf((*q.Timeval)(nil)).Elem(),
			"WaitStatus":    reflect.TypeOf((*q.WaitStatus)(nil)).Elem(),
		},
		AliasTypes: map[string]reflect.Type{
			"Dircookie": reflect.TypeOf((*uint64)(nil)).Elem(),
			"Filetype":  reflect.TypeOf((*uint8)(nil)).Elem(),
		},
		Vars: map[string]reflect.Value{},
		Funcs: map[string]reflect.Value{
			"Accept":              reflect.ValueOf(q.Accept),
			"Bind":                reflect.ValueOf(q.Bind),
			"BytePtrFromString":   reflect.ValueOf(q.BytePtrFromString),
			"ByteSliceFromString": reflect.ValueOf(q.ByteSliceFromString),
			"Chdir":               reflect.ValueOf(q.Chdir),
			"Chmod":               reflect.ValueOf(q.Chmod),
			"Chown":               reflect.ValueOf(q.Chown),
			"Clearenv":            reflect.ValueOf(q.Clearenv),
			"Close":               reflect.ValueOf(q.Close),
			"CloseOnExec":         reflect.ValueOf(q.CloseOnExec),
			"Connect":             reflect.ValueOf(q.Connect),
			"Dup":                 reflect.ValueOf(q.Dup),
			"Dup2":                reflect.ValueOf(q.Dup2),
			"Environ":             reflect.ValueOf(q.Environ),
			"Exit":                reflect.ValueOf(q.Exit),
			"Fchmod":              reflect.ValueOf(q.Fchmod),
			"Fchown":              reflect.ValueOf(q.Fchown),
			"Fstat":               reflect.ValueOf(q.Fstat),
			"Fsync":               reflect.ValueOf(q.Fsync),
			"Ftruncate":           reflect.ValueOf(q.Ftruncate),
			"Getegid":             reflect.ValueOf(q.Getegid),
			"Getenv":              reflect.ValueOf(q.Getenv),
			"Geteuid":             reflect.ValueOf(q.Geteuid),
			"Getgid":              reflect.ValueOf(q.Getgid),
			"Getgroups":           reflect.ValueOf(q.Getgroups),
			"Getpagesize":         reflect.ValueOf(q.Getpagesize),
			"Getpid":              reflect.ValueOf(q.Getpid),
			"Getppid":             reflect.ValueOf(q.Getppid),
			"Getrlimit":           reflect.ValueOf(q.Getrlimit),
			"GetsockoptInt":       reflect.ValueOf(q.GetsockoptInt),
			"Gettimeofday":        reflect.ValueOf(q.Gettimeofday),
			"Getuid":              reflect.ValueOf(q.Getuid),
			"Getwd":               reflect.ValueOf(q.Getwd),
			"Kill":                reflect.ValueOf(q.Kill),
			"Lchown":              reflect.ValueOf(q.Lchown),
			"Link":                reflect.ValueOf(q.Link),
			"Listen":              reflect.ValueOf(q.Listen),
			"Lstat":               reflect.ValueOf(q.Lstat),
			"Mkdir":               reflect.ValueOf(q.Mkdir),
			"NsecToTimespec":      reflect.ValueOf(q.NsecToTimespec),
			"NsecToTimeval":       reflect.ValueOf(q.NsecToTimeval),
			"Open":                reflect.ValueOf(q.Open),
			"Openat":              reflect.ValueOf(q.Openat),
			"ParseDirent":         reflect.ValueOf(q.ParseDirent),
			"Pipe":                reflect.ValueOf(q.Pipe),
			"Pread":               reflect.ValueOf(q.Pread),
			"ProcExit":            reflect.ValueOf(q.ProcExit),
			"Pwrite":              reflect.ValueOf(q.Pwrite),
			"RandomGet":           reflect.ValueOf(q.RandomGet),
			"RawSyscall":          reflect.ValueOf(q.RawSyscall),
			"RawSyscall6":         reflect.ValueOf(q.RawSyscall6),
			"Read":                reflect.ValueOf(q.Read),
			"ReadDir":             reflect.ValueOf(q.ReadDir),
			"Readlink":            reflect.ValueOf(q.Readlink),
			"Recvfrom":            reflect.ValueOf(q.Recvfrom),
			"Recvmsg":             reflect.ValueOf(q.Recvmsg),
			"Rename":              reflect.ValueOf(q.Rename),
			"Rmdir":               reflect.ValueOf(q.Rmdir),
			"Seek":                reflect.ValueOf(q.Seek),
			"Sendfile":            reflect.ValueOf(q.Sendfile),
			"SendmsgN":            reflect.ValueOf(q.SendmsgN),
			"Sendto":              reflect.ValueOf(q.Sendto),
			"SetNonblock":         reflect.ValueOf(q.SetNonblock),
			"SetReadDeadline":     reflect.ValueOf(q.SetReadDeadline),
			"SetWriteDeadline":    reflect.ValueOf(q.SetWriteDeadline),
			"Setenv":              reflect.ValueOf(q.Setenv),
			"SetsockoptInt":       reflect.ValueOf(q.SetsockoptInt),
			"Shutdown":            reflect.ValueOf(q.Shutdown),
			"Socket":              reflect.ValueOf(q.Socket),
			"StartProcess":        reflect.ValueOf(q.StartProcess),
			"Stat":                reflect.ValueOf(q.Stat),
			"StopIO":              reflect.ValueOf(q.StopIO),
			"StringBytePtr":       reflect.ValueOf(q.StringBytePtr),
			"StringByteSlice":     reflect.ValueOf(q.StringByteSlice),
			"Symlink":             reflect.ValueOf(q.Symlink),
			"Syscall":             reflect.ValueOf(q.Syscall),
			"Syscall6":            reflect.ValueOf(q.Syscall6),
			"Sysctl":              reflect.ValueOf(q.Sysctl),
			"TimespecToNsec":      reflect.ValueOf(q.TimespecToNsec),
			"TimevalToNsec":       reflect.ValueOf(q.TimevalToNsec),
			"Truncate":            reflect.ValueOf(q.Truncate),
			"Umask":               reflect.ValueOf(q.Umask),
			"Unlink":              reflect.ValueOf(q.Unlink),
			"Unsetenv":            reflect.ValueOf(q.Unsetenv),
			"UtimesNano":          reflect.ValueOf(q.UtimesNano),
			"Wait4":               reflect.ValueOf(q.Wait4),
			"Write":               reflect.ValueOf(q.Write),
		},
		TypedConsts: map[string]ixgo.TypedConst{
			"E2BIG":                     {reflect.TypeOf(q.E2BIG), constant.MakeInt64(int64(q.E2BIG))},
			"EACCES":                    {reflect.TypeOf(q.EACCES), constant.MakeInt64(int64(q.EACCES))},
			"EADDRINUSE":                {reflect.TypeOf(q.EADDRINUSE), constant.MakeInt64(int64(q.EADDRINUSE))},
			"EADDRNOTAVAIL":             {reflect.TypeOf(q.EADDRNOTAVAIL), constant.MakeInt64(int64(q.EADDRNOTAVAIL))},
			"EAFNOSUPPORT":              {reflect.TypeOf(q.EAFNOSUPPORT), constant.MakeInt64(int64(q.EAFNOSUPPORT))},
			"EAGAIN":                    {reflect.TypeOf(q.EAGAIN), constant.MakeInt64(int64(q.EAGAIN))},
			"EALREADY":                  {reflect.TypeOf(q.EALREADY), constant.MakeInt64(int64(q.EALREADY))},
			"EBADF":                     {reflect.TypeOf(q.EBADF), constant.MakeInt64(int64(q.EBADF))},
			"EBADFD":                    {reflect.TypeOf(q.EBADFD), constant.MakeInt64(int64(q.EBADFD))},
			"EBADMSG":                   {reflect.TypeOf(q.EBADMSG), constant.MakeInt64(int64(q.EBADMSG))},
			"EBUSY":                     {reflect.TypeOf(q.EBUSY), constant.MakeInt64(int64(q.EBUSY))},
			"ECANCELED":                 {reflect.TypeOf(q.ECANCELED), constant.MakeInt64(int64(q.ECANCELED))},
			"ECHILD":                    {reflect.TypeOf(q.ECHILD), constant.MakeInt64(int64(q.ECHILD))},
			"ECONNABORTED":              {reflect.TypeOf(q.ECONNABORTED), constant.MakeInt64(int64(q.ECONNABORTED))},
			"ECONNREFUSED":              {reflect.TypeOf(q.ECONNREFUSED), constant.MakeInt64(int64(q.ECONNREFUSED))},
			"ECONNRESET":                {reflect.TypeOf(q.ECONNRESET), constant.MakeInt64(int64(q.ECONNRESET))},
			"EDEADLK":                   {reflect.TypeOf(q.EDEADLK), constant.MakeInt64(int64(q.EDEADLK))},
			"EDESTADDRREQ":              {reflect.TypeOf(q.EDESTADDRREQ), constant.MakeInt64(int64(q.EDESTADDRREQ))},
			"EDOM":                      {reflect.TypeOf(q.EDOM), constant.MakeInt64(int64(q.EDOM))},
			"EDQUOT":                    {reflect.TypeOf(q.EDQUOT), constant.MakeInt64(int64(q.EDQUOT))},
			"EEXIST":                    {reflect.TypeOf(q.EEXIST), constant.MakeInt64(int64(q.EEXIST))},
			"EFAULT":                    {reflect.TypeOf(q.EFAULT), constant.MakeInt64(int64(q.EFAULT))},
			"EFBIG":                     {reflect.TypeOf(q.EFBIG), constant.MakeInt64(int64(q.EFBIG))},
			"EHOSTUNREACH":              {reflect.TypeOf(q.EHOSTUNREACH), constant.MakeInt64(int64(q.EHOSTUNREACH))},
			"EIDRM":                     {reflect.TypeOf(q.EIDRM), constant.MakeInt64(int64(q.EIDRM))},
			"EILSEQ":                    {reflect.TypeOf(q.EILSEQ), constant.MakeInt64(int64(q.EILSEQ))},
			"EINPROGRESS":               {reflect.TypeOf(q.EINPROGRESS), constant.MakeInt64(int64(q.EINPROGRESS))},
			"EINTR":                     {reflect.TypeOf(q.EINTR), constant.MakeInt64(int64(q.EINTR))},
			"EINVAL":                    {reflect.TypeOf(q.EINVAL), constant.MakeInt64(int64(q.EINVAL))},
			"EIO":                       {reflect.TypeOf(q.EIO), constant.MakeInt64(int64(q.EIO))},
			"EISCONN":                   {reflect.TypeOf(q.EISCONN), constant.MakeInt64(int64(q.EISCONN))},
			"EISDIR":                    {reflect.TypeOf(q.EISDIR), constant.MakeInt64(int64(q.EISDIR))},
			"ELOOP":                     {reflect.TypeOf(q.ELOOP), constant.MakeInt64(int64(q.ELOOP))},
			"EMFILE":                    {reflect.TypeOf(q.EMFILE), constant.MakeInt64(int64(q.EMFILE))},
			"EMLINK":                    {reflect.TypeOf(q.EMLINK), constant.MakeInt64(int64(q.EMLINK))},
			"EMSGSIZE":                  {reflect.TypeOf(q.EMSGSIZE), constant.MakeInt64(int64(q.EMSGSIZE))},
			"EMULTIHOP":                 {reflect.TypeOf(q.EMULTIHOP), constant.MakeInt64(int64(q.EMULTIHOP))},
			"ENAMETOOLONG":              {reflect.TypeOf(q.ENAMETOOLONG), constant.MakeInt64(int64(q.ENAMETOOLONG))},
			"ENETDOWN":                  {reflect.TypeOf(q.ENETDOWN), constant.MakeInt64(int64(q.ENETDOWN))},
			"ENETRESET":                 {reflect.TypeOf(q.ENETRESET), constant.MakeInt64(int64(q.ENETRESET))},
			"ENETUNREACH":               {reflect.TypeOf(q.ENETUNREACH), constant.MakeInt64(int64(q.ENETUNREACH))},
			"ENFILE":                    {reflect.TypeOf(q.ENFILE), constant.MakeInt64(int64(q.ENFILE))},
			"ENOBUFS":                   {reflect.TypeOf(q.ENOBUFS), constant.MakeInt64(int64(q.ENOBUFS))},
			"ENODEV":                    {reflect.TypeOf(q.ENODEV), constant.MakeInt64(int64(q.ENODEV))},
			"ENOENT":                    {reflect.TypeOf(q.ENOENT), constant.MakeInt64(int64(q.ENOENT))},
			"ENOEXEC":                   {reflect.TypeOf(q.ENOEXEC), constant.MakeInt64(int64(q.ENOEXEC))},
			"ENOLCK":                    {reflect.TypeOf(q.ENOLCK), constant.MakeInt64(int64(q.ENOLCK))},
			"ENOLINK":                   {reflect.TypeOf(q.ENOLINK), constant.MakeInt64(int64(q.ENOLINK))},
			"ENOMEM":                    {reflect.TypeOf(q.ENOMEM), constant.MakeInt64(int64(q.ENOMEM))},
			"ENOMSG":                    {reflect.TypeOf(q.ENOMSG), constant.MakeInt64(int64(q.ENOMSG))},
			"ENOPROTOOPT":               {reflect.TypeOf(q.ENOPROTOOPT), constant.MakeInt64(int64(q.ENOPROTOOPT))},
			"ENOSPC":                    {reflect.TypeOf(q.ENOSPC), constant.MakeInt64(int64(q.ENOSPC))},
			"ENOSYS":                    {reflect.TypeOf(q.ENOSYS), constant.MakeInt64(int64(q.ENOSYS))},
			"ENOTCAPABLE":               {reflect.TypeOf(q.ENOTCAPABLE), constant.MakeInt64(int64(q.ENOTCAPABLE))},
			"ENOTCONN":                  {reflect.TypeOf(q.ENOTCONN), constant.MakeInt64(int64(q.ENOTCONN))},
			"ENOTDIR":                   {reflect.TypeOf(q.ENOTDIR), constant.MakeInt64(int64(q.ENOTDIR))},
			"ENOTEMPTY":                 {reflect.TypeOf(q.ENOTEMPTY), constant.MakeInt64(int64(q.ENOTEMPTY))},
			"ENOTRECOVERABLE":           {reflect.TypeOf(q.ENOTRECOVERABLE), constant.MakeInt64(int64(q.ENOTRECOVERABLE))},
			"ENOTSOCK":                  {reflect.TypeOf(q.ENOTSOCK), constant.MakeInt64(int64(q.ENOTSOCK))},
			"ENOTSUP":                   {reflect.TypeOf(q.ENOTSUP), constant.MakeInt64(int64(q.ENOTSUP))},
			"ENOTTY":                    {reflect.TypeOf(q.ENOTTY), constant.MakeInt64(int64(q.ENOTTY))},
			"ENXIO":                     {reflect.TypeOf(q.ENXIO), constant.MakeInt64(int64(q.ENXIO))},
			"EOPNOTSUPP":                {reflect.TypeOf(q.EOPNOTSUPP), constant.MakeInt64(int64(q.EOPNOTSUPP))},
			"EOVERFLOW":                 {reflect.TypeOf(q.EOVERFLOW), constant.MakeInt64(int64(q.EOVERFLOW))},
			"EOWNERDEAD":                {reflect.TypeOf(q.EOWNERDEAD), constant.MakeInt64(int64(q.EOWNERDEAD))},
			"EPERM":                     {reflect.TypeOf(q.EPERM), constant.MakeInt64(int64(q.EPERM))},
			"EPIPE":                     {reflect.TypeOf(q.EPIPE), constant.MakeInt64(int64(q.EPIPE))},
			"EPROTO":                    {reflect.TypeOf(q.EPROTO), constant.MakeInt64(int64(q.EPROTO))},
			"EPROTONOSUPPORT":           {reflect.TypeOf(q.EPROTONOSUPPORT), constant.MakeInt64(int64(q.EPROTONOSUPPORT))},
			"EPROTOTYPE":                {reflect.TypeOf(q.EPROTOTYPE), constant.MakeInt64(int64(q.EPROTOTYPE))},
			"ERANGE":                    {reflect.TypeOf(q.ERANGE), constant.MakeInt64(int64(q.ERANGE))},
			"EROFS":                     {reflect.TypeOf(q.EROFS), constant.MakeInt64(int64(q.EROFS))},
			"ESPIPE":                    {reflect.TypeOf(q.ESPIPE), constant.MakeInt64(int64(q.ESPIPE))},
			"ESRCH":                     {reflect.TypeOf(q.ESRCH), constant.MakeInt64(int64(q.ESRCH))},
			"ESTALE":                    {reflect.TypeOf(q.ESTALE), constant.MakeInt64(int64(q.ESTALE))},
			"ETIMEDOUT":                 {reflect.TypeOf(q.ETIMEDOUT), constant.MakeInt64(int64(q.ETIMEDOUT))},
			"ETXTBSY":                   {reflect.TypeOf(q.ETXTBSY), constant.MakeInt64(int64(q.ETXTBSY))},
			"EXDEV":                     {reflect.TypeOf(q.EXDEV), constant.MakeInt64(int64(q.EXDEV))},
			"FILETYPE_BLOCK_DEVICE":     {reflect.TypeOf(q.FILETYPE_BLOCK_DEVICE), constant.MakeInt64(int64(q.FILETYPE_BLOCK_DEVICE))},
			"FILETYPE_CHARACTER_DEVICE": {reflect.TypeOf(q.FILETYPE_CHARACTER_DEVICE), constant.MakeInt64(int64(q.FILETYPE_CHARACTER_DEVICE))},
			"FILETYPE_DIRECTORY":        {reflect.TypeOf(q.FILETYPE_DIRECTORY), constant.MakeInt64(int64(q.FILETYPE_DIRECTORY))},
			"FILETYPE_REGULAR_FILE":     {reflect.TypeOf(q.FILETYPE_REGULAR_FILE), constant.MakeInt64(int64(q.FILETYPE_REGULAR_FILE))},
			"FILETYPE_SOCKET_DGRAM":     {reflect.TypeOf(q.FILETYPE_SOCKET_DGRAM), constant.MakeInt64(int64(q.FILETYPE_SOCKET_DGRAM))},
			"FILETYPE_SOCKET_STREAM":    {reflect.TypeOf(q.FILETYPE_SOCKET_STREAM), constant.MakeInt64(int64(q.FILETYPE_SOCKET_STREAM))},
			"FILETYPE_SYMBOLIC_LINK":    {reflect.TypeOf(q.FILETYPE_SYMBOLIC_LINK), constant.MakeInt64(int64(q.FILETYPE_SYMBOLIC_LINK))},
			"FILETYPE_UNKNOWN":          {reflect.TypeOf(q.FILETYPE_UNKNOWN), constant.MakeInt64(int64(q.FILETYPE_UNKNOWN))},
			"SIGABRT":                   {reflect.TypeOf(q.SIGABRT), constant.MakeInt64(int64(q.SIGABRT))},
			"SIGALRM":                   {reflect.TypeOf(q.SIGALRM), constant.MakeInt64(int64(q.SIGALRM))},
			"SIGBUS":                    {reflect.TypeOf(q.SIGBUS), constant.MakeInt64(int64(q.SIGBUS))},
			"SIGCHLD":                   {reflect.TypeOf(q.SIGCHLD), constant.MakeInt64(int64(q.SIGCHLD))},
			"SIGCONT":                   {reflect.TypeOf(q.SIGCONT), constant.MakeInt64(int64(q.SIGCONT))},
			"SIGFPE":                    {reflect.TypeOf(q.SIGFPE), constant.MakeInt64(int64(q.SIGFPE))},
			"SIGHUP":                    {reflect.TypeOf(q.SIGHUP), constant.MakeInt64(int64(q.SIGHUP))},
			"SIGILL":                    {reflect.TypeOf(q.SIGILL), constant.MakeInt64(int64(q.SIGILL))},
			"SIGINT":                    {reflect.TypeOf(q.SIGINT), constant.MakeInt64(int64(q.SIGINT))},
			"SIGKILL":                   {reflect.TypeOf(q.SIGKILL), constant.MakeInt64(int64(q.SIGKILL))},
			"SIGNONE":                   {reflect.TypeOf(q.SIGNONE), constant.MakeInt64(int64(q.SIGNONE))},
			"SIGPIPE":                   {reflect.TypeOf(q.SIGPIPE), constant.MakeInt64(int64(q.SIGPIPE))},
			"SIGPOLL":                   {reflect.TypeOf(q.SIGPOLL), constant.MakeInt64(int64(q.SIGPOLL))},
			"SIGPROF":                   {reflect.TypeOf(q.SIGPROF), constant.MakeInt64(int64(q.SIGPROF))},
			"SIGPWR":                    {reflect.TypeOf(q.SIGPWR), constant.MakeInt64(int64(q.SIGPWR))},
			"SIGQUIT":                   {reflect.TypeOf(q.SIGQUIT), constant.MakeInt64(int64(q.SIGQUIT))},
			"SIGSEGV":                   {reflect.TypeOf(q.SIGSEGV), constant.MakeInt64(int64(q.SIGSEGV))},
			"SIGSTOP":                   {reflect.TypeOf(q.SIGSTOP), constant.MakeInt64(int64(q.SIGSTOP))},
			"SIGSYS":                    {reflect.TypeOf(q.SIGSYS), constant.MakeInt64(int64(q.SIGSYS))},
			"SIGTERM":                   {reflect.TypeOf(q.SIGTERM), constant.MakeInt64(int64(q.SIGTERM))},
			"SIGTRAP":                   {reflect.TypeOf(q.SIGTRAP), constant.MakeInt64(int64(q.SIGTRAP))},
			"SIGTSTP":                   {reflect.TypeOf(q.SIGTSTP), constant.MakeInt64(int64(q.SIGTSTP))},
			"SIGTTIN":                   {reflect.TypeOf(q.SIGTTIN), constant.MakeInt64(int64(q.SIGTTIN))},
			"SIGTTOU":                   {reflect.TypeOf(q.SIGTTOU), constant.MakeInt64(int64(q.SIGTTOU))},
			"SIGURG":                    {reflect.TypeOf(q.SIGURG), constant.MakeInt64(int64(q.SIGURG))},
			"SIGUSR1":                   {reflect.TypeOf(q.SIGUSR1), constant.MakeInt64(int64(q.SIGUSR1))},
			"SIGUSR2":                   {reflect.TypeOf(q.SIGUSR2), constant.MakeInt64(int64(q.SIGUSR2))},
			"SIGVTARLM":                 {reflect.TypeOf(q.SIGVTARLM), constant.MakeInt64(int64(q.SIGVTARLM))},
			"SIGWINCH":                  {reflect.TypeOf(q.SIGWINCH), constant.MakeInt64(int64(q.SIGWINCH))},
			"SIGXCPU":                   {reflect.TypeOf(q.SIGXCPU), constant.MakeInt64(int64(q.SIGXCPU))},
			"SIGXFSZ":                   {reflect.TypeOf(q.SIGXFSZ), constant.MakeInt64(int64(q.SIGXFSZ))},
		},
		UntypedConsts: map[string]ixgo.UntypedConst{
			"AF_INET":                       {"untyped int", constant.MakeInt64(int64(q.AF_INET))},
			"AF_INET6":                      {"untyped int", constant.MakeInt64(int64(q.AF_INET6))},
			"AF_UNIX":                       {"untyped int", constant.MakeInt64(int64(q.AF_UNIX))},
			"AF_UNSPEC":                     {"untyped int", constant.MakeInt64(int64(q.AF_UNSPEC))},
			"FDFLAG_APPEND":                 {"untyped int", constant.MakeInt64(int64(q.FDFLAG_APPEND))},
			"FDFLAG_DSYNC":                  {"untyped int", constant.MakeInt64(int64(q.FDFLAG_DSYNC))},
			"FDFLAG_NONBLOCK":               {"untyped int", constant.MakeInt64(int64(q.FDFLAG_NONBLOCK))},
			"FDFLAG_RSYNC":                  {"untyped int", constant.MakeInt64(int64(q.FDFLAG_RSYNC))},
			"FDFLAG_SYNC":                   {"untyped int", constant.MakeInt64(int64(q.FDFLAG_SYNC))},
			"FILESTAT_SET_ATIM":             {"untyped int", constant.MakeInt64(int64(q.FILESTAT_SET_ATIM))},
			"FILESTAT_SET_ATIM_NOW":         {"untyped int", constant.MakeInt64(int64(q.FILESTAT_SET_ATIM_NOW))},
			"FILESTAT_SET_MTIM":             {"untyped int", constant.MakeInt64(int64(q.FILESTAT_SET_MTIM))},
			"FILESTAT_SET_MTIM_NOW":         {"untyped int", constant.MakeInt64(int64(q.FILESTAT_SET_MTIM_NOW))},
			"F_CNVT":                        {"untyped int", constant.MakeInt64(int64(q.F_CNVT))},
			"F_DUPFD":                       {"untyped int", constant.MakeInt64(int64(q.F_DUPFD))},
			"F_DUPFD_CLOEXEC":               {"untyped int", constant.MakeInt64(int64(q.F_DUPFD_CLOEXEC))},
			"F_GETFD":                       {"untyped int", constant.MakeInt64(int64(q.F_GETFD))},
			"F_GETFL":                       {"untyped int", constant.MakeInt64(int64(q.F_GETFL))},
			"F_GETLK":                       {"untyped int", constant.MakeInt64(int64(q.F_GETLK))},
			"F_GETOWN":                      {"untyped int", constant.MakeInt64(int64(q.F_GETOWN))},
			"F_RDLCK":                       {"untyped int", constant.MakeInt64(int64(q.F_RDLCK))},
			"F_RGETLK":                      {"untyped int", constant.MakeInt64(int64(q.F_RGETLK))},
			"F_RSETLK":                      {"untyped int", constant.MakeInt64(int64(q.F_RSETLK))},
			"F_RSETLKW":                     {"untyped int", constant.MakeInt64(int64(q.F_RSETLKW))},
			"F_SETFD":                       {"untyped int", constant.MakeInt64(int64(q.F_SETFD))},
			"F_SETFL":                       {"untyped int", constant.MakeInt64(int64(q.F_SETFL))},
			"F_SETLK":                       {"untyped int", constant.MakeInt64(int64(q.F_SETLK))},
			"F_SETLKW":                      {"untyped int", constant.MakeInt64(int64(q.F_SETLKW))},
			"F_SETOWN":                      {"untyped int", constant.MakeInt64(int64(q.F_SETOWN))},
			"F_UNLCK":                       {"untyped int", constant.MakeInt64(int64(q.F_UNLCK))},
			"F_UNLKSYS":                     {"untyped int", constant.MakeInt64(int64(q.F_UNLKSYS))},
			"F_WRLCK":                       {"untyped int", constant.MakeInt64(int64(q.F_WRLCK))},
			"IPPROTO_IP":                    {"untyped int", constant.MakeInt64(int64(q.IPPROTO_IP))},
			"IPPROTO_IPV4":                  {"untyped int", constant.MakeInt64(int64(q.IPPROTO_IPV4))},
			"IPPROTO_IPV6":                  {"untyped int", constant.MakeInt64(int64(q.IPPROTO_IPV6))},
			"IPPROTO_TCP":                   {"untyped int", constant.MakeInt64(int64(q.IPPROTO_TCP))},
			"IPPROTO_UDP":                   {"untyped int", constant.MakeInt64(int64(q.IPPROTO_UDP))},
			"IPV6_V6ONLY":                   {"untyped int", constant.MakeInt64(int64(q.IPV6_V6ONLY))},
			"ImplementsGetwd":               {"untyped bool", constant.MakeBool(bool(q.ImplementsGetwd))},
			"LOOKUP_SYMLINK_FOLLOW":         {"untyped int", constant.MakeInt64(int64(q.LOOKUP_SYMLINK_FOLLOW))},
			"OFLAG_CREATE":                  {"untyped int", constant.MakeInt64(int64(q.OFLAG_CREATE))},
			"OFLAG_DIRECTORY":               {"untyped int", constant.MakeInt64(int64(q.OFLAG_DIRECTORY))},
			"OFLAG_EXCL":                    {"untyped int", constant.MakeInt64(int64(q.OFLAG_EXCL))},
			"OFLAG_TRUNC":                   {"untyped int", constant.MakeInt64(int64(q.OFLAG_TRUNC))},
			"O_APPEND":                      {"untyped int", constant.MakeInt64(int64(q.O_APPEND))},
			"O_CLOEXEC":                     {"untyped int", constant.MakeInt64(int64(q.O_CLOEXEC))},
			"O_CREAT":                       {"untyped int", constant.MakeInt64(int64(q.O_CREAT))},
			"O_CREATE":                      {"untyped int", constant.MakeInt64(int64(q.O_CREATE))},
			"O_DIRECTORY":                   {"untyped int", constant.MakeInt64(int64(q.O_DIRECTORY))},
			"O_EXCL":                        {"untyped int", constant.MakeInt64(int64(q.O_EXCL))},
			"O_NOFOLLOW":                    {"untyped int", constant.MakeInt64(int64(q.O_NOFOLLOW))},
			"O_RDONLY":                      {"untyped int", constant.MakeInt64(int64(q.O_RDONLY))},
			"O_RDWR":                        {"untyped int", constant.MakeInt64(int64(q.O_RDWR))},
			"O_SYNC":                        {"untyped int", constant.MakeInt64(int64(q.O_SYNC))},
			"O_TRUNC":                       {"untyped int", constant.MakeInt64(int64(q.O_TRUNC))},
			"O_WRONLY":                      {"untyped int", constant.MakeInt64(int64(q.O_WRONLY))},
			"RIGHT_FDSTAT_SET_FLAGS":        {"untyped int", constant.MakeInt64(int64(q.RIGHT_FDSTAT_SET_FLAGS))},
			"RIGHT_FD_ADVISE":               {"untyped int", constant.MakeInt64(int64(q.RIGHT_FD_ADVISE))},
			"RIGHT_FD_ALLOCATE":             {"untyped int", constant.MakeInt64(int64(q.RIGHT_FD_ALLOCATE))},
			"RIGHT_FD_DATASYNC":             {"untyped int", constant.MakeInt64(int64(q.RIGHT_FD_DATASYNC))},
			"RIGHT_FD_FILESTAT_GET":         {"untyped int", constant.MakeInt64(int64(q.RIGHT_FD_FILESTAT_GET))},
			"RIGHT_FD_FILESTAT_SET_SIZE":    {"untyped int", constant.MakeInt64(int64(q.RIGHT_FD_FILESTAT_SET_SIZE))},
			"RIGHT_FD_FILESTAT_SET_TIMES":   {"untyped int", constant.MakeInt64(int64(q.RIGHT_FD_FILESTAT_SET_TIMES))},
			"RIGHT_FD_READ":                 {"untyped int", constant.MakeInt64(int64(q.RIGHT_FD_READ))},
			"RIGHT_FD_READDIR":              {"untyped int", constant.MakeInt64(int64(q.RIGHT_FD_READDIR))},
			"RIGHT_FD_SEEK":                 {"untyped int", constant.MakeInt64(int64(q.RIGHT_FD_SEEK))},
			"RIGHT_FD_SYNC":                 {"untyped int", constant.MakeInt64(int64(q.RIGHT_FD_SYNC))},
			"RIGHT_FD_TELL":                 {"untyped int", constant.MakeInt64(int64(q.RIGHT_FD_TELL))},
			"RIGHT_FD_WRITE":                {"untyped int", constant.MakeInt64(int64(q.RIGHT_FD_WRITE))},
			"RIGHT_PATH_CREATE_DIRECTORY":   {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_CREATE_DIRECTORY))},
			"RIGHT_PATH_CREATE_FILE":        {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_CREATE_FILE))},
			"RIGHT_PATH_FILESTAT_GET":       {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_FILESTAT_GET))},
			"RIGHT_PATH_FILESTAT_SET_SIZE":  {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_FILESTAT_SET_SIZE))},
			"RIGHT_PATH_FILESTAT_SET_TIMES": {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_FILESTAT_SET_TIMES))},
			"RIGHT_PATH_LINK_SOURCE":        {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_LINK_SOURCE))},
			"RIGHT_PATH_LINK_TARGET":        {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_LINK_TARGET))},
			"RIGHT_PATH_OPEN":               {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_OPEN))},
			"RIGHT_PATH_READLINK":           {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_READLINK))},
			"RIGHT_PATH_REMOVE_DIRECTORY":   {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_REMOVE_DIRECTORY))},
			"RIGHT_PATH_RENAME_SOURCE":      {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_RENAME_SOURCE))},
			"RIGHT_PATH_RENAME_TARGET":      {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_RENAME_TARGET))},
			"RIGHT_PATH_SYMLINK":            {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_SYMLINK))},
			"RIGHT_PATH_UNLINK_FILE":        {"untyped int", constant.MakeInt64(int64(q.RIGHT_PATH_UNLINK_FILE))},
			"RIGHT_POLL_FD_READWRITE":       {"untyped int", constant.MakeInt64(int64(q.RIGHT_POLL_FD_READWRITE))},
			"RIGHT_SOCK_ACCEPT":             {"untyped int", constant.MakeInt64(int64(q.RIGHT_SOCK_ACCEPT))},
			"RIGHT_SOCK_SHUTDOWN":           {"untyped int", constant.MakeInt64(int64(q.RIGHT_SOCK_SHUTDOWN))},
			"RLIMIT_NOFILE":                 {"untyped int", constant.MakeInt64(int64(q.RLIMIT_NOFILE))},
			"SHUT_RD":                       {"untyped int", constant.MakeInt64(int64(q.SHUT_RD))},
			"SHUT_RDWR":                     {"untyped int", constant.MakeInt64(int64(q.SHUT_RDWR))},
			"SHUT_WR":                       {"untyped int", constant.MakeInt64(int64(q.SHUT_WR))},
			"SOCK_DGRAM":                    {"untyped int", constant.MakeInt64(int64(q.SOCK_DGRAM))},
			"SOCK_RAW":                      {"untyped int", constant.MakeInt64(int64(q.SOCK_RAW))},
			"SOCK_SEQPACKET":                {"untyped int", constant.MakeInt64(int64(q.SOCK_SEQPACKET))},
			"SOCK_STREAM":                   {"untyped int", constant.MakeInt64(int64(q.SOCK_STREAM))},
			"SOMAXCONN":                     {"untyped int", constant.MakeInt64(int64(q.SOMAXCONN))},
			"SO_ERROR":                      {"untyped int", constant.MakeInt64(int64(q.SO_ERROR))},
			"SYS_FCNTL":                     {"untyped int", constant.MakeInt64(int64(q.SYS_FCNTL))},
			"S_IEXEC":                       {"untyped int", constant.MakeInt64(int64(q.S_IEXEC))},
			"S_IFBLK":                       {"untyped int", constant.MakeInt64(int64(q.S_IFBLK))},
			"S_IFBOUNDSOCK":                 {"untyped int", constant.MakeInt64(int64(q.S_IFBOUNDSOCK))},
			"S_IFCHR":                       {"untyped int", constant.MakeInt64(int64(q.S_IFCHR))},
			"S_IFCOND":                      {"untyped int", constant.MakeInt64(int64(q.S_IFCOND))},
			"S_IFDIR":                       {"untyped int", constant.MakeInt64(int64(q.S_IFDIR))},
			"S_IFDSOCK":                     {"untyped int", constant.MakeInt64(int64(q.S_IFDSOCK))},
			"S_IFIFO":                       {"untyped int", constant.MakeInt64(int64(q.S_IFIFO))},
			"S_IFLNK":                       {"untyped int", constant.MakeInt64(int64(q.S_IFLNK))},
			"S_IFMT":                        {"untyped int", constant.MakeInt64(int64(q.S_IFMT))},
			"S_IFMUTEX":                     {"untyped int", constant.MakeInt64(int64(q.S_IFMUTEX))},
			"S_IFREG":                       {"untyped int", constant.MakeInt64(int64(q.S_IFREG))},
			"S_IFSEMA":                      {"untyped int", constant.MakeInt64(int64(q.S_IFSEMA))},
			"S_IFSHM":                       {"untyped int", constant.MakeInt64(int64(q.S_IFSHM))},
			"S_IFSHM_SYSV":                  {"untyped int", constant.MakeInt64(int64(q.S_IFSHM_SYSV))},
			"S_IFSOCK":                      {"untyped int", constant.MakeInt64(int64(q.S_IFSOCK))},
			"S_IFSOCKADDR":                  {"untyped int", constant.MakeInt64(int64(q.S_IFSOCKADDR))},
			"S_IREAD":                       {"untyped int", constant.MakeInt64(int64(q.S_IREAD))},
			"S_IRGRP":                       {"untyped int", constant.MakeInt64(int64(q.S_IRGRP))},
			"S_IROTH":                       {"untyped int", constant.MakeInt64(int64(q.S_IROTH))},
			"S_IRUSR":                       {"untyped int", constant.MakeInt64(int64(q.S_IRUSR))},
			"S_IRWXG":                       {"untyped int", constant.MakeInt64(int64(q.S_IRWXG))},
			"S_IRWXO":                       {"untyped int", constant.MakeInt64(int64(q.S_IRWXO))},
			"S_IRWXU":                       {"untyped int", constant.MakeInt64(int64(q.S_IRWXU))},
			"S_ISGID":                       {"untyped int", constant.MakeInt64(int64(q.S_ISGID))},
			"S_ISUID":                       {"untyped int", constant.MakeInt64(int64(q.S_ISUID))},
			"S_ISVTX":                       {"untyped int", constant.MakeInt64(int64(q.S_ISVTX))},
			"S_IWGRP":                       {"untyped int", constant.MakeInt64(int64(q.S_IWGRP))},
			"S_IWOTH":                       {"untyped int", constant.MakeInt64(int64(q.S_IWOTH))},
			"S_IWRITE":                      {"untyped int", constant.MakeInt64(int64(q.S_IWRITE))},
			"S_IWUSR":                       {"untyped int", constant.MakeInt64(int64(q.S_IWUSR))},
			"S_IXGRP":                       {"untyped int", constant.MakeInt64(int64(q.S_IXGRP))},
			"S_IXOTH":                       {"untyped int", constant.MakeInt64(int64(q.S_IXOTH))},
			"S_IXUSR":                       {"untyped int", constant.MakeInt64(int64(q.S_IXUSR))},
			"S_UNSUP":                       {"untyped int", constant.MakeInt64(int64(q.S_UNSUP))},
			"Stderr":                        {"untyped int", constant.MakeInt64(int64(q.Stderr))},
			"Stdin":                         {"untyped int", constant.MakeInt64(int64(q.Stdin))},
			"Stdout":                        {"untyped int", constant.MakeInt64(int64(q.Stdout))},
			"WHENCE_CUR":                    {"untyped int", constant.MakeInt64(int64(q.WHENCE_CUR))},
			"WHENCE_END":                    {"untyped int", constant.MakeInt64(int64(q.WHENCE_END))},
			"WHENCE_SET":                    {"untyped int", constant.MakeInt64(int64(q.WHENCE_SET))},
		},
	})
}
